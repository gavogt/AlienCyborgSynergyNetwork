// <auto-generated />
using System;
using AlienCyborgSynergyNetwork.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlienCyborgSynergyNetwork.Shared.Migrations
{
    [DbContext(typeof(SensorDBContext))]
    [Migration("20250610173225_InitialSensors2")]
    partial class InitialSensors2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("AlienCyborgSynergyNetwork.CyborgSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnitId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CyborgSession");
                });

            modelBuilder.Entity("AlienCyborgSynergyNetwork.SensorReading", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("SessionId");

                    b.ToTable("sensors", (string)null);
                });

            modelBuilder.Entity("AlienCyborgSynergyNetwork.SensorReading", b =>
                {
                    b.HasOne("AlienCyborgSynergyNetwork.CyborgSession", "Session")
                        .WithMany("SensorReadings")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("AlienCyborgSynergyNetwork.CyborgSession", b =>
                {
                    b.Navigation("SensorReadings");
                });
#pragma warning restore 612, 618
        }
    }
}
