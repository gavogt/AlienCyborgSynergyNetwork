@page "/login"

@inject NavigationManager NavigationManager

<EditForm Model="@LoginModel" OnValidSubmit="HandleValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="container">
		<div class="row">
			<div class="col-md-4">
				<img src="images/aliencyborgsynergynetwork.png" alt="AlienCyborgSynergyNetwork Logo" class="img-fluid mb-3" />
			</div>
			<div class="col-md-8">
				<div class="card shadow-sm">
					<div class="card-header">
						<h1>Login</h1>
					</div>
					<div class="card-body">
						<label for="email" class="form-label mt-3">Email</label>
						<input type="email" id="email" class="form-control" placeholder="Enter your email" @bind-value="LoginModel.Email" />

						<label for="password">Password</label>
						<input type="password" class="form-control mb-3" placeholder="Password" @bind-value="LoginModel.Password" />
					</div>
					<div class="card-footer d-flex justify-content-between align-content-center">
						<div class="form-check">
							<InputCheckbox id="rememberme" class="form-check-input" @bind-Value="LoginModel.RememberMe" />
							<label class="form-check-label" for="rememberme">Remember Me</label>
						</div>
						<div class="d-flex justify-content-center">
							<button class="btn btn-primary mb-3">Login</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</EditForm>
@code {
	public LoginModel LoginModel { get; set; } = new LoginModel();

	protected override void OnInitialized()
	{
		var stored = Preferences.Get("savedUser", string.Empty);

		if (!string.IsNullOrWhiteSpace(stored))
		{
			LoginModel.Email = stored;
			LoginModel.RememberMe = true;
		}
	}

	private void HandleValidSubmit()
	{
		if (LoginModel.RememberMe)
		{
			Preferences.Set("savedUser", LoginModel.Email);
		}
		else
		{
			Preferences.Remove("savedUser");
		}

		NavigationManager.NavigateTo("/", true);
	}
}
