@page "/edit/{Id:guid}"
@inject IUnitOfWork Uow
@inject NavigationManager NavigationManager

<h3>Edit Session</h3>
<EditForm Model="_model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label class="form-label">Unit ID</label>
        <InputText class="form-control" @bind-Value="_model.UnitId" />
    </div>

    <div class="mb-3">
        <label class="form-label">Type</label>
        <InputSelect class="form-select" @bind-Value="_model.Type">
            @foreach (var t in Enum.GetValues<SessionType>())
            {
                <option value="@t">@t</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [Parameter] public Guid Id { get; set; }
    private CyborgSession _model = default!;

    protected override async Task OnInitializedAsync()
    {
        var existing = await Uow.Sessions.GetByIdAsync(Id);
        if (existing is not null)
        {
            _model = existing;
        }
        else
        {
			NavigationManager.NavigateTo("/sessions");
        }
    }

	private async Task HandleValidSubmit()
	{
		Uow.Sessions.Update(_model);
		await Uow.SaveChangesAsync();
		NavigationManager.NavigateTo("/sessions");
	}

	private void Cancel()
	{
		NavigationManager.NavigateTo("/sessions");
    }
}
