@page "/register-user"
<EditForm Model="@RegisterModel" OnValidSubmit="HandleValidSubmit">
	<DataAnnotationsValidator />

	<div class="container">
		<div class="row">
			<div class="col-md-12">
				<div class="card shadow-sm">
					<div class="card-header">
						<h3 class="card-title">Register User</h3>
					</div>
					<div class="card-body">
						<label for="email" class="form-label mt-3">Email</label>
						<input type="email" id="email" class="form-control" placeholder="Enter your email" @bind-value="RegisterModel.Email" />
						<ValidationMessage For="@(() => RegisterModel.Email)" />
						<label for="password" class="form-label mt-3">Password</label>
						<input type="password" id="password" class="form-control" placeholder="Enter your password" @bind-value="RegisterModel.Password" />
						<ValidationMessage For="@(() => RegisterModel.Password)" />
						<label for="confirmPassword" class="form-label mt-3">Confirm Password</label>
						<input type="password" id="confirmPassword" class="form-control" placeholder="Confirm your password" @bind-value="RegisterModel.ConfirmPassword" />
						<ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" />
						<label for="FirstName">First Name</label>
						<input type="text" id="FirstName" class="form-control mt-3" placeholder="Enter your first name" @bind-value="RegisterModel.FirstName" />
						<ValidationMessage For="@(() => RegisterModel.FirstName)" />
						<label for="LastName">Last Name</label>
						<input type="text" id="LastName" class="form-control mt-3" placeholder="Enter your last name" @bind-value="RegisterModel.LastName" />
						<ValidationMessage For="@(() => RegisterModel.LastName)" />
						<div class="mt-3">
							<button class="btn btn-primary">Register</button>
						</div>
						<div class="mt-3 text-danger">
							@if (!string.IsNullOrEmpty(ErrorMessage))
							{
								<p>@ErrorMessage</p>
							}
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<ValidationSummary />
</EditForm>
@code {
	public RegisterModel RegisterModel { get; set; } = new RegisterModel();
	private string ErrorMessage { get; set; } = string.Empty;

	private void HandleValidSubmit()
	{
		if (RegisterModel.Password != RegisterModel.ConfirmPassword)
		{
			ErrorMessage = "Passwords do not match.";
			// Handle password mismatch
			return;
		}
	}
}
